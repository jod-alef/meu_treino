# Generated by Django 5.1.4 on 2024-12-21 13:18

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EquipamentoAcademia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maquina', models.CharField(blank=True, choices=[('smith', 'Máquina Smith'), ('crossover', 'Crossover'), ('pulley', 'Pulley'), ('leg_press', 'Leg Press'), ('extensora', 'Máquina Extensora'), ('flexora', 'Máquina Flexora'), ('hack_squat', 'Hack Squat'), ('supino', 'Máquina de Supino'), ('remada_sentada', 'Máquina de Remada Sentada'), ('peck_deck', 'Peck Deck'), ('cable_cross', 'Cable Cross'), ('remada_t_bar', 'Remada T-Bar'), ('extensor_de_panturrilha', 'Extensor de Panturrilha'), ('cadeira_adutora', 'Cadeira Adutora'), ('cadeira_abdutora', 'Cadeira Abdutora')], max_length=50, null=True)),
                ('tipo_peso', models.CharField(blank=True, choices=[('halteres', 'Halteres'), ('barras', 'Barras'), ('anilhas', 'Anilhas'), ('kettlebells', 'Kettlebells'), ('medicine_ball', 'Bola Medicinal'), ('caneleiras', 'Caneleiras')], max_length=50, null=True)),
                ('variacao_peso', models.CharField(blank=True, choices=[('fixos', 'Pesos Fixos'), ('ajustaveis', 'Pesos Ajustáveis'), ('livres', 'Pesos Livres'), ('acoplados', 'Pesos Acoplados')], max_length=50, null=True)),
                ('equipamento_auxiliar', models.CharField(blank=True, choices=[('corda', 'Corda de Pular'), ('roda_abdominal', 'Roda Abdominal'), ('step', 'Step'), ('prancha_abdominal', 'Prancha Abdominal'), ('bola_estabilidade', 'Bola de Estabilidade'), ('elásticos', 'Elásticos de Resistência'), ('battle_ropes', 'Battle Ropes')], max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Exercicios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('peitoral', models.CharField(blank=True, choices=[('supino_reto', 'Supino Reto'), ('supino_inclinado', 'Supino Inclinado'), ('supino_declinado', 'Supino Declinado'), ('crucifixo_reto', 'Crucifixo Reto'), ('crucifixo_inclinado', 'Crucifixo Inclinado'), ('crucifixo_declinado', 'Crucifixo Declinado'), ('peck_deck', 'Peck Deck'), ('cross_over', 'Cross Over'), ('supino_halteres', 'Supino com Halteres'), ('pressao_peitoral', 'Pressão Peitoral')], max_length=50, null=True)),
                ('costas', models.CharField(blank=True, choices=[('remada_curvada', 'Remada Curvada'), ('remada_unilateral', 'Remada Unilateral'), ('remada_cavalinho', 'Remada Cavalinho'), ('pulley_frontal', 'Pulley Frontal'), ('pulley_traseiro', 'Pulley Traseiro'), ('barra_fixa', 'Barra Fixa'), ('pulldown', 'Pulldown'), ('levantamento_terra', 'Levantamento Terra'), ('remada_invertida', 'Remada Invertida'), ('barbell_row', 'Barbell Row'), ('deadlift_romano', 'Deadlift Romano')], max_length=50, null=True)),
                ('ombros', models.CharField(blank=True, choices=[('desenvolvimento_reto', 'Desenvolvimento Reto'), ('desenvolvimento_halteres', 'Desenvolvimento com Halteres'), ('elevacao_lateral', 'Elevação Lateral'), ('elevacao_frontal', 'Elevação Frontal'), ('remada_alta', 'Remada Alta'), ('crucifixo_invertido', 'Crucifixo Invertido'), ('arnold_press', 'Arnold Press'), ('press_militar', 'Press Militar'), ('face_pulls', 'Face Pulls'), ('delt_reverse', 'Delt Reverse')], max_length=50, null=True)),
                ('biceps', models.CharField(blank=True, choices=[('rosca_direta', 'Rosca Direta'), ('rosca_martelo', 'Rosca Martelo'), ('rosca_invertida', 'Rosca Invertida'), ('rosca_concentrada', 'Rosca Concentrada'), ('rosca_scott', 'Rosca Scott'), ('rosca_barriga', 'Rosca Barriga'), ('curl_pulley', 'Curl no Pulley'), ('drag_curl', 'Drag Curl')], max_length=50, null=True)),
                ('triceps', models.CharField(blank=True, choices=[('triceps_pulley', 'Tríceps no Pulley'), ('triceps_testa', 'Tríceps Testa'), ('mergulho_triceps', 'Mergulho no Banco'), ('triceps_coice', 'Tríceps Coice'), ('triceps_frances', 'Tríceps Francês'), ('skull_crusher', 'Skull Crusher'), ('triceps_diamante', 'Tríceps Diamante'), ('kickback_triceps', 'Kickback Tríceps')], max_length=50, null=True)),
                ('pernas', models.CharField(blank=True, choices=[('agachamento_livre', 'Agachamento Livre'), ('agachamento_smith', 'Agachamento no Smith'), ('leg_press', 'Leg Press'), ('extensora', 'Cadeira Extensora'), ('flexora', 'Cadeira Flexora'), ('afundos', 'Afundos'), ('panturrilha_sentada', 'Panturrilha Sentada'), ('panturrilha_em_pe', 'Panturrilha em Pé'), ('agachamento_bulgaro', 'Agachamento Búlgaro'), ('agachamento_femorais', 'Agachamento com Femorais'), ('hip_thrust', 'Hip Thrust'), ('passada', 'Passada'), ('sissy_squat', 'Sissy Squat'), ('leg_extension', 'Extensão de Perna')], max_length=50, null=True)),
                ('abdomen', models.CharField(blank=True, choices=[('abdominal_crunch', 'Abdominal Crunch'), ('prancha_isometrica', 'Prancha Isométrica'), ('abdominal_inferior', 'Abdominal Inferior'), ('abdominal_obliquo', 'Abdominal Oblíquo'), ('elevação_pernas', 'Elevação de Pernas'), ('abdominal_bicycle', 'Abdominal Bicycle'), ('abdominal_em_rolamento', 'Abdominal em Rolo'), ('abdominal_terra', 'Abdominal Terra'), ('plank_rotacional', 'Plank Rotacional'), ('ab_wheel', 'Roda Abdominal')], max_length=50, null=True)),
                ('outros', models.CharField(blank=True, choices=[('stiff', 'Stiff'), ('kettlebell_swing', 'Kettlebell Swing'), ('burpee', 'Burpee'), ('jump_squat', 'Jump Squat'), ('remada_sentada', 'Remada Sentada'), ('pull_over', 'Pull Over'), ('puxada_no_cabo', 'Puxada no Cabo'), ('clean_and_press', 'Clean and Press'), ('snatch', 'Snatch'), ('deadlift_sumô', 'Deadlift Sumô'), ('box_jump', 'Box Jump'), ('mountain_climber', 'Mountain Climber'), ('pistol_squat', 'Pistol Squat'), ('battle_ropes', 'Battle Ropes')], max_length=50, null=True)),
                ('tipo_exercicio', models.CharField(choices=[('cardio', 'Cardio'), ('hipertrofia', 'Hipertrofia'), ('forca', 'Força'), ('potencia', 'Potência'), ('hiit', 'HIIT'), ('resistencia', 'Resistência')], max_length=15)),
                ('nivel_dificuldade', models.CharField(choices=[('facil', 'Facil'), ('medio', 'Médio'), ('dificil', 'Difícil'), ('avancado', 'Avançado')], max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='FichaUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('altura', models.DecimalField(decimal_places=2, max_digits=5)),
                ('peso', models.DecimalField(decimal_places=2, max_digits=5)),
                ('imc', models.DecimalField(decimal_places=2, max_digits=5)),
                ('data_nascimento', models.DateField()),
                ('sexo', models.CharField(max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Exercicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipamento', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='treino.equipamentoacademia')),
                ('exercicio', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='treino.exercicios')),
            ],
        ),
        migrations.CreateModel(
            name='Treino',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frequencia_semanal', models.IntegerField()),
                ('series', models.IntegerField()),
                ('repeticoes', models.IntegerField()),
                ('peso', models.IntegerField()),
                ('descanso', models.IntegerField()),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treino.fichausuario')),
                ('exercicio', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='treino.exercicio')),
            ],
        ),
    ]
